{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","actions/index.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","menuItem","onAddToCart","title","price","url","category","react_default","a","createElement","className","src","alt","onClick","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","components_resto_service_context","Consumer","RestoService","Object","assign","Spinner","Error","MenuList","_this","this","menuRequested","getMenuItems","then","res","menuLoaded","catch","menuError","_this$props","menuItems","loading","error","addedToCart","components_error","components_spinner","items","map","components_menu_list_item","key","id","menu_list_View","Component","mapDispatchToProps","newMenu","type","payload","View","connect","state","menu","MainPage","components_menu_list","setMessage","message","mapCanvas","document","querySelector","messageContainer","style","zIndex","display","color","width","padding","margin","fontSize","textAlign","borderRadius","backgroundColor","textContent","append","setTimeout","remove","generateOrder","item","count","deleteFromCart","CartTable","_ref2","_item$count","setOrder","forEach","element","CartPage","components_cart_table","AppHeader","totalPrice","react_router_dom","to","cartIcon","App","background","concat","Background","components_app_header","total","react_router","path","exact","component","ErrorBoundry","setState","children","_apiBase","fetch","ok","status","json","getResource","console","log","find","el","order","getOrderNumber","number","newOrder","method","headers","Content-Type","body","JSON","stringify","orderNumber","length","initialState","reducer","arguments","undefined","action","objectSpread","itemIndex","findIndex","toConsumableArray","slice","newItem","index","itemInd","store","createStore","restoService","ReactDOM","render","es","error_boundry","Provider","value","components_app","getElementById"],"mappings":"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","file":"static/js/main.4e3e84d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from 'react';\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({ menuItem, onAddToCart }) => {\n    const { title, price, url, category } = menuItem\n        ;    return (\n            <li className=\"menu__item\">\n                <div className=\"menu__title\">{title}</div>\n                <img className=\"menu__img\" src={url} alt={title}></img>\n                <div className=\"menu__category\">Category: <span>{category}</span></div>\n                <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                <button onClick={()=>onAddToCart() } className=\"menu__btn\">Add to cart</button>\n            </li>        \n    )\n}\n\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props}\n                        RestoService = {RestoService}\n                        />\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    }\n};\n\nexport default WithRestoService;","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nconst Spinner = () => {\n    return <div className=\"spinner\">loading...</div>\n}\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport MenuListItem from '../menu-list-item';\nimport { connect } from 'react-redux';\nimport './menu-list.scss';\nimport WithRestoService from '../hoc';\nimport { menuLoaded, menuError, menuRequested, addedToCart } from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\n\nclass MenuList extends Component {\n    componentDidMount() {\n        this.props.menuRequested();\n        const { RestoService } = this.props;\n        RestoService.getMenuItems()\n            .then(res => this.props.menuLoaded(res))\n            .catch(() => this.props.menuError());\n    }\n\n    render() {\n        const { menuItems, loading, error, addedToCart } = this.props;\n        \n        if (error) {\n            return <Error/>\n        }\n        \n        if (loading) {\n            return <Spinner/>\n        }\n\n        const items = menuItems.map((menuItem) => {\n            return (\n                <MenuListItem\n                    key={menuItem.id}\n                    menuItem={menuItem}\n                    onAddToCart={ ()=>addedToCart(menuItem.id)}/>\n            );\n        })\n\n        return <View items={items}/>\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error,\n    }\n}\n\nconst mapDispatchToProps = {\n    menuLoaded,\n    menuError,\n    menuRequested,\n    addedToCart\n}\n\nconst View = ({ items }) => {\n\n    return (\n        <ul className=\"menu__list\">\n            {items}\n        </ul>\n    )\n}\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    };\r\n}\r\n\r\nconst menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED'\r\n    }\r\n}\r\nconst menuError = () => {\r\n    return {\r\n        type: 'MENU_ERROR'\r\n    }\r\n}\r\n\r\nconst addedToCart = (id) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CARD',\r\n        payload: id,\r\n    }\r\n}\r\n\r\nconst deleteFromCart = (id) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CART',\r\n        payload: id,\r\n    }\r\n}\r\nexport { menuLoaded, menuRequested, menuError,addedToCart, deleteFromCart };","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport { connect } from 'react-redux';\nimport { deleteFromCart } from '../../actions';\nimport WithRestoService from '../hoc';\n\nconst CartTable = ({ items, deleteFromCart,RestoService}) => {\n    return (\n        <div className=\"cart-table\">\n            <div className=\"cart__title\">Your order:</div>\n            <div className=\"cart__list\">\n                {\n                    items.map(item => {\n                        const { title, price, url, id } = item;\n                        let { count = 1 } = item;\n                    \n                        return (\n                            <div key={id} className=\"cart__item\">\n                                <img src={url} alt={title} className=\"cart__item-img\"></img>\n                                <div className=\"cart__item-title\">{title}</div>\n                                <div className=\"cart__item-price\">{price}$</div>\n                                <div className=\"cart__item-price\">{count}</div>\n                                <div\n                                    onClick={() => deleteFromCart(id)}\n                                    className=\"cart__close\">\n                                    &times;\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <button onClick={() => {\n                RestoService.setOrder(generateOrder(items));\n                items.forEach(element => {\n                    deleteFromCart(element.id);\n                });\n                setMessage(\"Thank you for order\");\n            }} className=\"order\">Buy</button>\n        </div>\n    );\n};\n\nconst setMessage = (message) => {\n    const mapCanvas = document.querySelector('.cart-table');\n\n    const messageContainer = document.createElement('div');\n\n    messageContainer.style.zIndex = 5;\n    messageContainer.style.display = 'block';\n    messageContainer.style.color = 'black';\n    messageContainer.style.width = '280px';\n    messageContainer.style.padding = '30px 10px';\n    messageContainer.style.margin = '10px auto';\n    messageContainer.style.fontSize = '25px';\n    messageContainer.style.textAlign = 'center';\n    messageContainer.style.borderRadius = '20px';\n    messageContainer.style.backgroundColor = 'green';\n\n    messageContainer.textContent = message;\n\n    mapCanvas.append(messageContainer);\n\n    setTimeout(() => {\n        messageContainer.remove();\n    }, 5000);\n}\n\nconst generateOrder = (items) => {\n    const newOrder = items.map(item => {\n        return {\n            id: item.id,\n            count: item.count\n        }\n    })\n    return newOrder;\n}\n\nconst mapStateToProps = ({ items }) => {\n    return {\n        items\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteFromCart\n}\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartTable));","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AppHeader = ({ totalPrice }) => {\n\n    return (\n        <header className=\"header\">\n            <Link to={'/'} className=\"header__link\">Menu</Link>\n            <Link to=\"/cart\" className=\"header__link\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {totalPrice} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({ totalPrice }) => {\n    return {\n        totalPrice\n    }\n}\n\nexport default connect(mapStateToProps)(AppHeader);\n","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header';\nimport Background from './food-bg.jpg';\nimport { Switch,Route } from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader total={50} />\n            <Switch>\n                <Route path='/' exact component={MainPage} />\n                <Route path='/cart' component={CartPage} />\n                <Route exact component={MainPage} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n\n    state = {\n        error: false,\n    }\n\n    componentDidCatch() {\n        this.setState({ error: true });\n    }\n    render() {\n        if (this.state.error) {\n           return <Error/>\n        }\n        \n        return this.props.children;\n    }\n}","export default class RestoService {\r\n     _apiBase = 'http://localhost:3000';\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` + \r\n                `, received ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getMenuItems () {\r\n        return await this.getResource('/menu/');\r\n    }\r\n\r\n    async getItem(id) {\r\n        const res = await this.getResource('/menu/');\r\n        console.log(res);\r\n        const item = res.find( (el) => {\r\n            console.log(`el.id: ${el.id}, id: ${id}`);\r\n            return el.id === +id;\r\n        }) \r\n        console.log(item);\r\n        return item;\r\n    }\r\n\r\n    async setOrder(order) {\r\n       \r\n        const number = await this.getOrderNumber();\r\n        const newOrder = {\r\n            id: number,\r\n            order: order\r\n        }\r\n        const response = await fetch(`${this._apiBase}/orders`, {\r\n            method: 'POST', \r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(newOrder)\r\n        });\r\n        if (!response.ok){\r\n            throw new Error('json error'); \r\n        }\r\n    }\r\n\r\n    async getOrderNumber(){\r\n        const res = await this.getResource('/orders/');\r\n        const orderNumber = res.length+1;\r\n\r\n        return orderNumber\r\n    }\r\n}","const initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    error: false,\r\n    items: [],\r\n    totalPrice: 0,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false\r\n            };\r\n        case 'MENU_REQUESTED':\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n            };\r\n        case 'MENU_ERROR':\r\n            return {\r\n                ...state,\r\n                error: true,\r\n            };\r\n        case 'ITEM_ADD_TO_CARD':\r\n            const id = action.payload;\r\n            const item = state.menu.find(item => item.id === id);\r\n            const itemIndex = state.items.findIndex(item => item.id === id);\r\n                        \r\n            if (state.items.find(item => item.id === id)) {\r\n                let { count } = state.items[itemIndex];\r\n                return {\r\n                    ...state,\r\n                    items: [\r\n                        ...state.items.slice(0, itemIndex),\r\n                        {\r\n                            ...state.items[itemIndex],\r\n                            count: ++count\r\n                        },\r\n                        ...state.items.slice(itemIndex + 1)\r\n                    ],\r\n                    totalPrice: state.totalPrice + item.price,\r\n                }            \r\n            }\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id,\r\n                count: 1,\r\n            }\r\n            return {\r\n                ...state,\r\n                items:[\r\n                        ...state.items,\r\n                        newItem\r\n                    ],\r\n                totalPrice: state.totalPrice + item.price,\r\n\r\n            };\r\n        case 'ITEM_REMOVE_FROM_CART':\r\n            const index = action.payload;      \r\n            const itemInd = state.items.findIndex(item => item.id === index);\r\n            const price = state.items[itemInd].price * state.items[itemInd].count;\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items.slice(0, itemInd),\r\n                    ...state.items.slice(itemInd + 1)\r\n                ],\r\n                totalPrice: state.totalPrice - price,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport store from './store';\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}